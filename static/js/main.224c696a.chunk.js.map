{"version":3,"sources":["components/Map/Map.jsx","components/Next/Next.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["Map","props","mapContainer","useRef","useEffect","coords","map","mapboxgl","container","style","zoom","center","antialias","coordinates","forEach","item","push","latLng","coord","Marker","setLngLat","setPopup","Popup","offset","setHTML","location","addTo","route","type","features","geometry","point","properties","lineDistance","turf","arc","steps","i","segment","counter","on","e","addSource","data","addLayer","id","source","paint","layout","active","animate","start","end","bearing","getSource","setData","requestAnimationFrame","className","ref","el","accessToken","Next","index","Typography","align","variant","to","section","duration","children","Section","classes","makeStyles","theme","paper","display","flexDirection","alignItems","position","breakpoints","up","height","h1","fontWeight","marginBottom","down","fontSize","h2","useStyles","Grid","component","direction","xs","sm","md","image","src","alt","title","mapActive","Paper","square","isLast","nextSectionID","icon","label","color","description","loop","strings","backDelay","App","sections","useState","navClasses","setNavClasses","activeMap","setActiveMap","all","length","activeClass","spy","smooth","isDynamic","onSetActive","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.224c696a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Map.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as turf from \"@turf/turf\";\n\nmapboxgl.accessToken =\n    \"pk.eyJ1Ijoic3RldmVuemltbWVyIiwiYSI6ImNrcTVobjRqeTFka20ycHF1cm9ud3h0d2YifQ.9UMD2rpWTV3zhL63tig5og\";\n\nexport default function Map(props) {\n    let mapContainer = useRef(null);\n    useEffect(() => {\n        let coords = [];\n        const map = new mapboxgl.Map({\n            container: mapContainer,\n            style: \"mapbox://styles/stevenzimmer/ckq5zfknj2veo17nr2hccwfzq\",\n            zoom: 4,\n            center: [-109.03439339328686, 36.99549429252819],\n            antialias: true,\n        });\n\n        props.coordinates.forEach((item) => {\n            coords.push(item.latLng);\n        });\n\n        props.coordinates.map((coord) => {\n            return new mapboxgl.Marker()\n                .setLngLat(coord.latLng)\n                .setPopup(\n                    new mapboxgl.Popup({ offset: 30 }).setHTML(\n                        `<h3 class=\"text-xl\">${coord.location}</h3>\n                            `\n                    )\n                )\n                .addTo(map);\n        });\n\n        const route = {\n            type: \"FeatureCollection\",\n            features: [\n                {\n                    type: \"Feature\",\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates: coords,\n                    },\n                },\n            ],\n        };\n\n        const point = {\n            type: \"FeatureCollection\",\n            features: [\n                {\n                    type: \"Feature\",\n                    properties: {},\n                    geometry: {\n                        type: \"Point\",\n                        coordinates: coords[0],\n                    },\n                },\n            ],\n        };\n\n        const lineDistance = turf.length(route.features[0]);\n\n        // console.log(lineDistance);\n\n        const arc = [];\n\n        // Number of steps to use in the arc and animation, more steps means\n        // a smoother arc and animation, but too many steps will result in a\n        // low frame rate\n        const steps = 6000;\n\n        // Draw an arc between the `origin` & `destination` of the two points\n        for (let i = 0; i < lineDistance; i += lineDistance / steps) {\n            const segment = turf.along(route.features[0], i);\n            arc.push(segment.geometry.coordinates);\n        }\n\n        // Update the route with calculated arc coordinates\n        route.features[0].geometry.coordinates = arc;\n\n        // Used to increment the value of the point measurement against the route.\n        let counter = 0;\n\n        map.on(\"load\", (e) => {\n            // console.log(e);\n            // Add a source and layer displaying a point which will be animated in a circle.\n            map.addSource(\"route\", {\n                type: \"geojson\",\n                data: route,\n            });\n\n            map.addSource(\"point\", {\n                type: \"geojson\",\n                data: point,\n            });\n\n            map.addLayer({\n                id: \"route\",\n                source: \"route\",\n                type: \"line\",\n                paint: {\n                    \"line-width\": 2,\n                    \"line-color\": \"#007cbf\",\n                },\n            });\n\n            map.addLayer({\n                id: \"point\",\n                source: \"point\",\n                type: \"symbol\",\n                layout: {\n                    // This icon is a part of the Mapbox Streets style.\n                    // To view all images available in a Mapbox style, open\n                    // the style in Mapbox Studio and click the \"Images\" tab.\n                    // To add a new image to the style at runtime see\n                    // https://docs.mapbox.com/mapbox-gl-js/example/add-image/\n                    \"icon-image\": \"car-15\",\n                    \"icon-rotate\": [\"get\", \"bearing\"],\n                    \"icon-rotation-alignment\": \"map\",\n                    \"icon-allow-overlap\": true,\n                    \"icon-ignore-placement\": true,\n                },\n            });\n\n            function animate() {\n                const start =\n                    route.features[0].geometry.coordinates[\n                        counter >= steps ? counter - 1 : counter\n                    ];\n                const end =\n                    route.features[0].geometry.coordinates[\n                        counter >= steps ? counter : counter + 1\n                    ];\n                if (!start || !end) return;\n\n                // Update point geometry to a new position based on counter denoting\n                // the index to access the arc\n                point.features[0].geometry.coordinates =\n                    route.features[0].geometry.coordinates[counter];\n\n                // Calculate the bearing to ensure the icon is rotated to match the route arc\n                // The bearing is calculated between the current point and the next point, except\n                // at the end of the arc, which uses the previous point and the current point\n                point.features[0].properties.bearing = turf.bearing(\n                    turf.point(start),\n                    turf.point(end)\n                );\n\n                // Update the source with this new data\n                map.getSource(\"point\").setData(point);\n\n                // Request the next frame of animation as long as the end has not been reached\n                if (counter < steps) {\n                    requestAnimationFrame(animate);\n                }\n\n                counter = counter + 1;\n            }\n            if (props.active) {\n                animate(counter);\n            }\n        });\n    }, [props.active, props.coordinates]);\n\n    return (\n        <>\n            <div\n                className=\"h-96 md:h-full\"\n                ref={(el) => (mapContainer = el)}\n            ></div>\n        </>\n    );\n}\n// export default Map;\n","import React from \"react\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport { Typography } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nexport default function Next(props) {\n    // console.log(props);\n    return (\n        <div\n            className={`absolute -bottom-10 md:bottom-8 cursor-pointer next-section ${\n                props.index % 2 === 0 ? `right-8` : `right-8 md:left-8`\n            }`}\n        >\n            <div className=\"flex items-end relative\">\n                <div className=\"\">\n                    <Typography align=\"center\" variant=\"h5\">\n                        <Link to={props.section} duration={300}>\n                            {props.children}\n                        </Link>\n                    </Typography>\n                </div>\n\n                <div className=\"animate-bounce\">\n                    <Link to={props.section} duration={300}>\n                        <ArrowDownward />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ITyped from \"react-ityped\";\nimport { Typography, Grid, Paper, makeStyles } from \"@material-ui/core\";\nimport Map from \"../Map/Map\";\n\nimport \"./Section.css\";\n\nimport Next from \"../Next/Next\";\n\nexport default function Section(props) {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            position: \"relative\",\n            [theme.breakpoints.up(\"sm\")]: {\n                height: \"100vh\",\n            },\n        },\n        h1: {\n            fontWeight: 500,\n            marginBottom: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n                fontSize: \"30px\",\n            },\n        },\n        h2: {\n            [theme.breakpoints.down(\"sm\")]: {\n                fontSize: \"24px\",\n            },\n        },\n    }));\n\n    const classes = useStyles();\n    const strings = [\n        \"Developer\",\n        \"Designer\",\n        \"Engineer\",\n        \"Programmer\",\n        \"Marketer\",\n        \"Dev Zim\",\n    ];\n\n    return (\n        <Grid\n            key={props.index}\n            id={props.data.id}\n            container\n            component=\"section\"\n            className=\" section\"\n            direction={props.index % 2 === 0 ? `row-reverse` : `row`}\n        >\n            <Grid item xs={12} sm={12} md={7} className=\"relative\">\n                {props.data.image && (\n                    <img\n                        className=\"w-full object-cover md:absolute h-full inset-0\"\n                        src={`assets/images/${props.data.image}.JPG`}\n                        alt={props.data.title}\n                    />\n                )}\n\n                {props.data.coordinates && (\n                    <Map\n                        active={props.mapActive}\n                        coordinates={props.data.coordinates}\n                    />\n                )}\n            </Grid>\n            <Grid item xs={12} sm={12} md={5} component={Paper} square>\n                <div className={classes.paper}>\n                    {!props.isLast && (\n                        <Next\n                            index={props.index}\n                            section={props.nextSectionID} //  props.index + 1}`\n                        >\n                            {props.index === 0 ? \"Learn more\" : \"Next\"}\n                        </Next>\n                    )}\n                    <div className=\"flex items-center justify-center w-full md:h-full py-12 md:py-0 \">\n                        <div className=\"w-11/12 lg:w-8/12\">\n                            <div\n                                className={` w-12 h-12 md:w-20 md:h-20 rounded-full shadow mb-6 mx-auto flex items-center justify-center ${\n                                    props.isLast ? \"bg-green-50\" : \"bg-blue-50\"\n                                }`}\n                            >\n                                <span\n                                    className={`material-icons text-3xl md:text-6xl text-center block ${\n                                        props.isLast\n                                            ? \"text-green-300\"\n                                            : \"text-blue-300\"\n                                    }`}\n                                >\n                                    {props.data.icon}\n                                </span>\n                            </div>\n\n                            {props.data.label && (\n                                <Typography\n                                    align=\"center\"\n                                    variant=\"h2\"\n                                    className={classes.h2}\n                                >\n                                    {props.data.label}\n                                </Typography>\n                            )}\n\n                            <Typography\n                                align=\"center\"\n                                color=\"primary\"\n                                variant=\"h1\"\n                                className={classes.h1}\n                            >\n                                {props.data.title}\n                            </Typography>\n                            {props.data.description && (\n                                <Typography\n                                    align=\"center\"\n                                    variant=\"h2\"\n                                    className={classes.h2}\n                                >\n                                    {props.data.description}\n                                </Typography>\n                            )}\n\n                            {props.index === 0 && (\n                                <Typography\n                                    align=\"center\"\n                                    variant=\"h2\"\n                                    className={classes.h2}\n                                >\n                                    Web{\" \"}\n                                    <ITyped\n                                        className=\"inline\"\n                                        loop={false}\n                                        strings={strings}\n                                        backDelay={1500}\n                                    />\n                                </Typography>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, { useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport { Link } from \"react-scroll\";\n\nfunction App() {\n    const sections = [\n        {\n            id: \"intro\",\n            icon: \"emoji_people\",\n            label: \"Hello! I am\",\n            title: \"Steven\",\n            // description: \"Served 10 years in the Air Force\",\n            image: \"intro\",\n        },\n        {\n            id: \"veteran\",\n            icon: \"military_tech\",\n            label: \"How it started\",\n            title: \"Veteran\",\n            description: \"Served 10 years in the Air Force\",\n            image: \"air-force\",\n        },\n        {\n            id: \"vagabond\",\n            icon: \"hiking\",\n            // label: \"How it's going\",\n            title: \"Vagabond\",\n            description: \"2020 Road Trip\",\n            coordinates: [\n                {\n                    location: \"San Francisco, Ca\",\n                    latLng: [-122.41150793919651, 37.776285677070895],\n                },\n                {\n                    location: \"Palm Springs, Ca\",\n                    latLng: [-116.25852701033762, 33.71290437522375],\n                },\n                {\n                    location: \"Kelseyville, Ca\",\n                    latLng: [-122.75076891551365, 38.990215557776324],\n                },\n                {\n                    location: \"Lake Shasta, Ca\",\n                    latLng: [-122.63542520736262, 40.70878042641915],\n                },\n                {\n                    location: \"Santa Cruz, Ca\",\n                    latLng: [-122.02473798474992, 36.967734661975804],\n                },\n                {\n                    location: \"Santa Rosa, Ca\",\n                    latLng: [-122.67144612571816, 38.43996632556139],\n                },\n                {\n                    location: \"Salt Lake City, UT\",\n                    latLng: [-111.9149935398457, 40.71780412729855],\n                },\n                {\n                    location: \"Denver, Co\",\n                    latLng: [-104.97665437152118, 39.714094320890595],\n                },\n                {\n                    location: \"Oklahmoa City, OK\",\n                    latLng: [-97.56434850793772, 35.42019985125595],\n                },\n\n                {\n                    location: \"Austin, TX\",\n                    latLng: [-97.74928891118893, 30.27922776989725],\n                },\n                {\n                    location: \"El Paso, Tx\",\n                    latLng: [-106.47190350054211, 31.803470478546984],\n                },\n\n                {\n                    location: \"Phoenix, AZ\",\n                    latLng: [-112.06190828497081, 33.541023952942936],\n                },\n                {\n                    location: \"San Diego, Ca\",\n                    latLng: [-117.1117550500424, 32.72031731941044],\n                },\n\n                {\n                    location: \"Los Banos, Ca\",\n                    latLng: [-120.84305413618728, 37.06124627887091],\n                },\n\n                {\n                    location: \"Granite Bay, Ca\",\n                    latLng: [-121.21383146743828, 38.726865529575925],\n                },\n            ],\n        },\n        {\n            id: \"glutton\",\n            icon: \"local_pizza\",\n            // label: \"How it started\",\n            title: \"Glutton\",\n            description: \"it's a problem\",\n            image: \"road-trip-6\",\n        },\n        {\n            id: \"fitness\",\n            icon: \"fitness_center\",\n            // label: \"How it started\",\n            title: \"Fitness\",\n            description: \"Operation: Body Temple\",\n            image: \"fitness\",\n        },\n\n        {\n            id: \"puppy\",\n            icon: \"pets\",\n            // label: \"Puppy zaddy\",\n            title: \"Benji\",\n            description: \"A mostly good boy\",\n            image: \"benji-4\",\n        },\n        {\n            id: \"homeowner\",\n            icon: \"house\",\n            // label: \"in the burbs\",\n            title: \"Settled\",\n            description: \"in the burbs\",\n            image: \"home-1\",\n        },\n\n        {\n            id: \"final\",\n            icon: \"check_circle\",\n            label: \"Finally...\",\n            title: \"Thank you\",\n            description: \"It's been a pleasure!\",\n            image: \"benji-3\",\n        },\n    ];\n\n    const [navClasses, setNavClasses] = useState(\"\");\n    const [activeMap, setActiveMap] = useState(false);\n\n    return (\n        <div className=\"app h-screen relative\">\n            <div className=\"sections w-full relative\">\n                {sections.map((section, i, all) => {\n                    let nextSectionID =\n                        all.length - 1 !== i ? all[i + 1].id : \"\";\n                    return (\n                        <Section\n                            nextSectionID={nextSectionID}\n                            key={section.id}\n                            index={i}\n                            data={section}\n                            isLast={i + 1 === sections.length}\n                            mapActive={activeMap}\n                        />\n                    );\n                })}\n            </div>\n            <div\n                className={`fixed w-12 md:w-20 h-full top-0 z-50 flex items-center transform -translate-x-full scrollspy-wrapper transition-transform duration-200 ${navClasses}`}\n            >\n                <div className=\"nav-stacked flex flex-col justify-center w-full active\">\n                    {sections.map((section, i) => {\n                        return (\n                            <Link\n                                key={i}\n                                activeClass=\"active\"\n                                to={section.id}\n                                spy={true}\n                                smooth={false}\n                                duration={300}\n                                isDynamic={true}\n                                onSetActive={(e) => {\n                                    if (e === \"intro\") {\n                                        setNavClasses(\"\");\n                                    } else {\n                                        setNavClasses(\"active\");\n                                    }\n\n                                    if (e === \"vagabond\") {\n                                        setActiveMap(true);\n                                    } else {\n                                        setActiveMap(false);\n                                    }\n                                }}\n                                className={`nav-item w-6 h-6 md:w-12 md:h-12 border-b cursor-pointer shadow-lg mx-auto flex items-center justify-center ${\n                                    i + 1 === sections.length\n                                        ? \"bg-green-50 hover:bg-green-100 border-transparent\"\n                                        : \"bg-blue-50 hover:bg-blue-100 border-blue-200\"\n                                }`}\n                            >\n                                <span\n                                    className={`material-icons text-sm md:text-3xl text-center block ${\n                                        i + 1 === sections.length\n                                            ? \"text-green-300\"\n                                            : \"text-blue-300\"\n                                    }`}\n                                >\n                                    {section.icon}\n                                </span>\n                            </Link>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}